<div class="multiList" id="multiList">
    <div class="multiLabBtns left questionLabBtns"></div>
    <div class="clearboth"></div>
    <div class="multiQuestionItem bgColor smallPadding">
        <div class="slide-container">
            <div class="stem"></div>
            <ul class="candidates">
            </ul>
            <div class="nav-container">
                <button role="button" id="prevBtn" class="btn btn-secondary nav_previous" disabled="disabled">上一题</button>
                <span class="labNo">0</span>
                <span>/</span>
                <span class="totalNo">0</span>
                <button role="button" id="nextBtn" class="btn btn-secondary nav_next">下一题</button>
            </div>
        </div>
    </div>
</div>
<script>
    var currentMultiQuestionNum = 0;
    $(document).ready(function(){
        if(multiNum > 0){
        	//init multi answer
            initMultiAnswerSheet();
            refreshMultiList();
        }
    })
    function initMultiAnswerSheet(){
    	for (var i = 0; i < multiNum; i++) {
            answerSheet['multis'].push({
                answer: [],
                miniseconds: []
            });
        }
    }
    function refreshMultiList(){
        var previousBtn = $('.multiList').find('.nav_previous');
    	//create question lab
        var multiListLabButtons = '';
        for (var i = 0; i < multiNum; i++) {
            multiListLabButtons += '<button class="btn questionLabNo" type="button">' + (i + 1) + '</button>';
        }
        $(".multiLabBtns").html(multiListLabButtons);

        //refresh question total num
        $('.multiQuestionItem .totalNo').html(multiNum);

        $('.nav .nav-item').eq(1).removeClass('tabDisabled');

        //click question lab button
        $('.multiList').find('.questionLabNo').click(function (eventName, notCheckAnswer) {
            if(!notCheckAnswer){
                updateMultiAnswer();
            }           
            currentMultiQuestionNum = $(this).index();
            renderMultiQuestion();
            if (currentMultiQuestionNum == 0) {
                setBtnDisabled(previousBtn);
            }else{
                setBtnEnabled(previousBtn);
            }
        });

        //click next button
        $('.multiList').find('.nav_next').click(function () {
            updateMultiAnswer();          
            if (currentMultiQuestionNum < multiNum - 1) {
                currentMultiQuestionNum++;
                renderMultiQuestion();
                setBtnEnabled(previousBtn);
            } else {
                emptyMultiQuestion();
                $('.tab-content').hide();
                $('#navToNextTab').modal('show');
            }
        });

        //click prev button
        $('.multiList').find('.nav_previous').click(function () {
            updateMultiAnswer();
            if (currentMultiQuestionNum > 0) {
                currentMultiQuestionNum--;
                if (currentMultiQuestionNum == 0) {
                    setBtnDisabled(previousBtn);
                }
            }
            renderMultiQuestion();          
        });

        //only select at least one answer will trigger
        $('.multiQuestionItem').on('change', 'input', function () {
            var answers = $(".multiQuestionItem input:checkbox[name='candidates']:checked");
            var ifChecked = $(this).is(':checked');
            var liItem = $(this).parents('li');
            if(ifChecked){
                liItem.addClass('selected');
            } else {
                liItem.removeClass('selected');
            }
            if(answers.length > 0){
                $('.multiLabBtns .questionLabNo').eq(currentMultiQuestionNum).addClass('selected');
            } else {
                $('.multiLabBtns .questionLabNo').eq(currentMultiQuestionNum).removeClass('selected');
            }
        });

        //support keyboard event
        $('.multiQuestionItem').on('keydown', 'input', function (event) {
            var event = event || window.event;
            var keyCode = event.keyCode;
            if (keyCode == 13) {
                $(this).trigger('click');
            }
        })
    }
    function updateMultiAnswer() {
        clearInterval(timer);
        var candidatesNum = $('.multiQuestionItem input[name="candidates"]').length;
        var answer = [];
        $(".multiQuestionItem input:checkbox[name='candidates']:checked").each(function(){
            var actualAnswer = getMixSelectionArray(candidatesNum, Number($(this).val()));
            answer.push(actualAnswer);
        })
        var actualMultiNum = getMixOrderArray(multiNum, currentMultiQuestionNum);
        var currentAnswer = answerSheet['multis'][actualMultiNum]['answer'];
        var ifChangeAnswer = arrayCompare(currentAnswer, answer);
        //if select or change any answer
        if(!ifChangeAnswer){
            answerSheet['multis'][actualMultiNum]['answer'] = answer;
            answerSheet['multis'][actualMultiNum]['miniseconds'].push(time, answer);
        }else{
            if(time > 2){
                answerSheet['multis'][actualMultiNum]['miniseconds'].push(time, answer);
            } 
        }
    }
    function restoreMultiAnswer(){
        var actualMultiNum = getMixOrderArray(multiNum, currentMultiQuestionNum);
        var answerObj = answerSheet['multis'][actualMultiNum];
        var answer = answerObj['answer'];
        if(answer.length > 0){
            var candidatesNum = $('.multiQuestionItem input[name="candidates"]').length;
            for(var i=0; i<answer.length; i++){
                var currentMultiAnswer = returnMixSelectionArray(candidatesNum, answer[i]);
                $('.multiQuestionItem .candidates').find('input').eq(currentMultiAnswer).attr('checked', 'checked');
                $('.multiQuestionItem .candidates').find('li').eq(currentMultiAnswer).addClass('selected');      
            }        
        }
    }
    function emptyMultiQuestion(){
        $('.multiQuestionItem .stem').html('');
        $('.multiQuestionItem .candidates').html('');
    }
    function renderMultiQuestion() {
        var actualMultiNum = getMixOrderArray(multiNum, currentMultiQuestionNum);
        var questionInfo = getQuestionInfo('multi', actualMultiNum);
        emptyMultiQuestion();
        if (questionInfo) {
            var stem = questionInfo.stem;
            var candidatesStr = '';
            var candidates = questionInfo.candidates;
            for (var j = 0; j < candidates.length; j++) {

                var candidatesIndex = getMixSelectionArray(candidates.length, j);
                var charCode = formatCharCode(j);
                var selection = candidates[candidatesIndex];
                candidatesStr += '<li><input type="checkbox" id="' + charCode + '" name="candidates" value="' + j + '"><label style="width: 90%;" for="' + charCode + '">' + selection + '</label></li>';
            }
            $('.multiQuestionItem .stem').html((currentMultiQuestionNum + 1) + '.' + stem);
            $('.multiQuestionItem .candidates').html(candidatesStr);
            $('.multiQuestionItem .labNo').html(currentMultiQuestionNum + 1);
            setQuestionLabFocus('.multiLabBtns', currentMultiQuestionNum);
            restoreMultiAnswer();
            getTimer();
        }
    }    
</script>
